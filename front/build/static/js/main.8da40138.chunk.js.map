{"version":3,"sources":["logos/croppedTrans.png","screens/createUser.js","redux/index.js","screens/dashboard.js","screens/login.js","screens/noAccess.js","routes/protectedRoute.js","screens/manageUsers.js","screens/reports.js","screens/err404.js","routes/routes.js","App.js","reportWebVitals.js","index.js"],"names":["require","config","CreateUser","useSelector","state","user","history","useHistory","useState","firstname","setFirstName","username","setUsername","password","setPassword","roles","setRoles","selectedRole","setSelectedRole","supervisorPass","setSupervisorPass","createDisabled","setCreateDisabled","dropdownIsLoading","setDropdownIsLoading","useEffect","Axios","get","process","then","responce","data","result","roleArray","map","role","value","label","checkMessage","alert","catch","e","JSON","stringify","message","className","src","logo","type","name","onChange","target","options","isLoading","placeholder","onClick","post","res","disabled","push","createStore","SET_USER","REMOVE_USER","removeUser","initialState","store","action","payload","withRouter","lastcheck","USER","comments","setComments","disableButtons","setDisablebuttons","lastCheckIn","replace","setLastCheckIn","dispatch","useDispatch","enableButtons","a","toUpperCase","Date","toISOString","slice","toLocaleTimeString","hour12","date","time","datetime","err","checkIn","id","timestampNow","Resp","ms","moment","diff","d","duration","totalHours","Math","floor","asHours","utc","format","checkOut","handleComments","setUser","NoAccess","style","height","width","fontSize","ProtectedRoute","isLogged","Component","component","isRestricted","acceptedRoles","rest","render","props","includes","ManageUsers","allUsers","setAllUsers","allSupervisors","setAllSupervisors","selectedUser","setSelectedUser","setAllRoles","setRolePassword","getSidenavUsers","passArray","showUser","User","index","Reports","startDate","setStartDate","endDate","setEndDate","setOptions","userSelection","setUserSelection","SelectionOptionsLoading","setSelectionOptionsLoading","reportOptions","setReportOptions","reportSelection","setReportSelection","theOptions","val","isMulti","isSearchable","formatGroupLabel","display","overflow","whiteSpace","employees","popperPlacement","selected","dateFormat","maxDate","showYearDropdown","scrollableYearMonthDropdown","selectedUsers","formattedStart","formattedEnd","reportType","responseType","response","console","log","pdfBlob","Blob","saveAs","Error404","Routes","path","Login","exact","Dashboard","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.8da40138.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/croppedTrans.794526d9.png\";","import React,{useState,useEffect}from 'react'\nimport'./createUser.css'\nimport Axios from 'axios'\nimport { useSelector } from 'react-redux'\nimport { useHistory } from 'react-router'\nimport { AiFillCaretLeft } from \"react-icons/ai\";\nimport  Select  from \"react-select\";\nimport logo from '../logos/croppedTrans.png';\nrequire('dotenv').config()\n\n\n\nconst CreateUser =() => {\n    const USER = useSelector(state=>state)\n    const user=USER.user[0]\n    const history=useHistory()\n\n    const [firstname,setFirstName]=useState(\"\")\n    const [username,setUsername]=useState(\"\")\n    const [password,setPassword]=useState(\"\")\n    const [roles,setRoles]=useState()\n    const [selectedRole,setSelectedRole]=useState(\"\")\n    const [supervisorPass,setSupervisorPass]=useState(\"\")\n    const [createDisabled,setCreateDisabled]=useState(false)\n    const [dropdownIsLoading,setDropdownIsLoading]=useState(true)\n\n\n    useEffect(()=>{\n        Axios.get(process.env.REACT_APP_API+\"getroles\").then((responce)=>{\n            const data=responce.data.result\n            if(data){\n                const roleArray=data.map((role)=>{\n                return {value:role.role,label:role.role}\n                })\n                setRoles(roleArray)\n                setDropdownIsLoading(false)\n            }\n            if(data.checkMessage){\n                alert(data.checkMessage)\n            }\n        }).catch((e)=>{\n            alert(JSON.stringify(e.message))\n            })\n    },[])\n\n    const handleChangeRole=(e)=>{\n        setSelectedRole(e)\n    }\n\n    const createButton=()=>{\n                setCreateDisabled(true)\n                Axios.post(process.env.REACT_APP_API+'newUser',{\n                    firstname:firstname,\n                    username:username,\n                    password:password,\n                    role:selectedRole.value,\n                    supervisorPass:supervisorPass\n                }).then((res)=>{\n                        if(res.data.checkMessage&& res.data.checkMessage!==\"User added sucessfully\"){\n                            alert(res.data.checkMessage)   \n                            setCreateDisabled(false)    \n                        }\n                        else if(res.data.checkMessage==\"User added sucessfully\"){\n                            alert(res.data.checkMessage)       \n                            setFirstName(\"\")\n                            setUsername(\"\")\n                            setPassword(\"\")\n                            setSelectedRole(\"\")\n                            setSupervisorPass(\"\")\n                            setCreateDisabled(false)   \n                        }\n                        else{\n                            setFirstName(\"\")\n                            setUsername(\"\")\n                            setPassword(\"\")\n                            setSelectedRole(\"\")\n                            setSupervisorPass(\"\")\n                            setCreateDisabled(false)   \n                        }\n                    }).catch((e)=>{\n                        alert(JSON.stringify(e.message))\n                        setCreateDisabled(false)\n                    })\n            }\n\n    const backToDash=()=>{\n        history.push('/dashboard')\n    }\n    return (\n        <div className=\"mainDiv\">\n            <div className=\"centerDiv\"> \n                <div className=\"createUserBox\">\n                <img src={logo} className='topLogoCreateUser'></img><br/>\n\n                   <p className=\"loginText\">Create User</p><br/>\n                   \n                    <span className=\"formText\">Full Name</span>\n                    \n                    <input className=\"formBox\"type=\"text\" name=\"Firstname\" onChange={(e)=>{setFirstName(e.target.value)}}value={firstname}></input>\n                    <br/>\n                    <span className=\"formText\">Username</span>\n                    <input className=\"formBox\" type=\"text\" name=\"username\" onChange={(e)=>{setUsername(e.target.value)}} value={username}></input><br/>\n                    <span className=\"formText\">Password</span>\n                    <input className=\"formBox\" type=\"password\" name=\"Password\" onChange={(e)=>{setPassword(e.target.value)}} value={password}></input>\n                    <br/>\n                    <span className=\"formText\">Role</span><br/>\n                        <div className='roleSelectionPosition'>\n                            <div className='roleSelectionClass'>\n                                <Select options={roles} onChange={handleChangeRole} value={selectedRole} isLoading={dropdownIsLoading} placeholder=\"Select Role!\"/>\n                            </div>\n                        </div>\n                         {selectedRole.value===\"supervisor\" && (\n                            <input className=\"formBox\" type=\"password\" placeholder=\"Supervisor Password:\" onChange={(e)=>{setSupervisorPass(e.target.value)}}/>\n                        )}\n                        \n                    <br/>\n                    <button onClick={createButton} className=\"loginButton\" disabled={createDisabled}><span className=\"loginButtText\">CREATE</span></button>\n                    <br/>\n                    <AiFillCaretLeft onClick={backToDash} className=\"backButton\"></AiFillCaretLeft>\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default CreateUser\n","const redux=require(\"redux\")\nconst createStore =redux.createStore\n\n\nconst SET_USER= \"SET_USER\"\nconst REMOVE_USER=\"REMOVE_USER\"\n\nfunction setUser(user){\n    return{\n        type:SET_USER,\n        payload:user\n    }\n}\n\nfunction removeUser(){\n    return{\n        type:REMOVE_USER\n    }\n}\nconst initialState={\n    user: null\n}\n\n// [{id: 20, username: \"md\", password: 4, role: \"supervisor\", firstname: \"Michael Dinglis\"}]\n\nconst reducer=(state=initialState,action)=>{\n    switch(action.type){\n        case SET_USER:\n            return{\n                user:action.payload\n            }\n        case REMOVE_USER:\n            return{\n                user:null\n            }\n        default: return state\n    }\n}\n\nconst store=createStore(reducer)\n\nexport default store\nexport {setUser,removeUser}","import React,{useState} from 'react'\nimport './dashboard.css'\nimport {useSelector} from 'react-redux'\nimport Axios from 'axios'\nimport {useDispatch} from 'react-redux'\nimport {removeUser} from '../redux/index'\nimport { useHistory } from \"react-router-dom\";\nimport moment from 'moment'\nimport { withRouter } from \"react-router-dom\";\nimport logo from '../logos/croppedTrans.png';\nrequire('dotenv').config()\n\n\nfunction Dashboard() {\n    const USER=useSelector(state => state.user)\n    const [user,setUser]=useState(USER[0])\n    const [comments,setComments]=useState(\"\")\n    const [disableButtons,setDisablebuttons]=useState(false)\n\n    var lastcheck\n    if(USER[0].lastCheckIn!=null){\n        lastcheck=USER[0].lastCheckIn.replace('Z', '').replace('T', ' ');\n        }\n    const [lastCheckIn,setLastCheckIn]=useState(lastcheck)\n    const dispatch=useDispatch()\n    const history=useHistory()\n\n    const enableButtons=async()=>{\n        setDisablebuttons(false)\n    }\n\n    const checkIn=()=>{\n        setDisablebuttons(true)\n        if(lastCheckIn!= null){\n            alert(\"Please check out before checking in!\")\n            enableButtons()\n        }\n        else{\n            const date=new Date().toISOString().slice(0, 10)\n            const time=new Date().toLocaleTimeString('el-GR',{hour12:false})\n            const datetime= `${date} ${time}`\n            Axios.post(process.env.REACT_APP_API+\"checkinpost\",{\n                username:USER[0].username,\n                datetime:datetime\n            }).then((res)=>{\n                alert(res.data.checkMessage)\n                setComments(\"\")\n                setLastCheckIn(datetime)\n                enableButtons()\n            }).catch((err)=>{\n                alert(`Error! ${err}`)\n                enableButtons()\n            })\n        }\n    }\n\n    const done=()=>{\n        history.push(\"/\")\n        dispatch(removeUser())\n    }\n\n    const checkOut=()=>{\n        setDisablebuttons(true)\n        const date=new Date().toISOString().slice(0, 10)\n        const time=new Date().toLocaleTimeString('el-GR',{hour12:false})\n        const timestampNow= `${date} ${time}`\n        Axios.get(`${process.env.REACT_APP_API}getCheckIn?username=${user.username}`).then((Resp)=>{\n            const data=Resp.data[0]\n            if(data.lastCheckIn===null){\n                alert(\"Please check in before checking out!\")\n                enableButtons()\n            }\n            else{\n                const checkIn=data.lastCheckIn.replace('Z', '').replace('T', ' ');\n                setLastCheckIn(null)\n                const ms=moment(timestampNow,\"YYYY/MM/DD HH:mm:ss\").diff(moment(checkIn,\"YYYY/MM/DD HH:mm:ss\"))\n                const d = moment.duration(ms);\n                const totalHours=Math.floor(d.asHours()) + moment.utc(ms).format(\".mm\");                \n                Axios.post(process.env.REACT_APP_API+'checkOut',{\n                    username:user.username,\n                    checkIn:checkIn,\n                    checkOut:timestampNow,\n                    totalHours:totalHours,\n                    comments:comments\n    \n                    }).then((res)=>{\n                        if(res.data.checkMessage){\n                            alert(res.data.checkMessage)\n                        }\n                        else{\n                            alert(`Check Out Sucessfull! Worktime: ${totalHours}`)\n                            setComments(\"\")\n                        }\n                        enableButtons()\n                    }).catch((e)=>{\n                        alert(JSON.stringify(e.message))\n                        enableButtons()\n                })\n            }\n        }).catch((e)=>{\n            alert(JSON.stringify(e.message))\n            enableButtons()\n        })\n    }\n\n    const handleComments=(e)=>{       \n            setComments(e.target.value)\n    }\n\n    const toManageUser=()=>{\n        history.push(\"/manageUsers\")\n    }\n\n    const toReports=()=>{\n        history.push(\"/reports\")\n    }\n\n    const toCreateUser=()=>{\n        history.push(\"createUser\")\n    }\n\n    return (\n        <div className=\"mainDiv\">\n            <div>\n                {user.role!==\"employee\" && (<div className=\"sidenav\">\n                    <div className=\"menuName\">{user.role.toUpperCase()} MENU</div>\n                    <a onClick={toCreateUser}>Create User</a>\n                    <a onClick={toManageUser}>Manage Users</a>\n                    <a onClick={toReports}>Reports</a>\n                </div>)}\n                <div className={user.role!==\"employee\" ? 'notCenterMain':'centerMain'}>\n                    <p className=\"welcomeTextDashboard\">\n                    <img src={logo} className='topLogoDash'></img><br/>\n                        Welcome, {user.firstname}<br/><br/>\n                        Last CheckIn: {lastCheckIn ? lastCheckIn : \"NULL\"}\n                    </p>\n                    <hr/>\n                        <p className='currentStats'>\n                            Current date: {new Date().toISOString().slice(0, 10)}<br/>\n                            Current time: {new Date().toLocaleTimeString('el-GR',{hour12:false})}\n                        </p>\n                        <button disabled={disableButtons} onClick={()=>{checkIn()}}id=\"in\" className=\"BUTTONS\" >Check In</button>\n                        <button disabled={disableButtons} onClick={()=>{checkOut()}}id=\"out\" className=\"BUTTONS\">Check Out</button>\n                        <br/>\n                        <input id=\"commentBox\" type=\"text\" name=\"comments\" value={comments} onChange={(e)=>{handleComments(e)}} placeholder=\"Checkout Comments\"/>\n                        <br/>\n                        <button onClick={()=>{done()}} id=\"dashboardDoneButton\">Done!</button><br/><br/>\n                    </div>\n            </div>\n\n\n            \n        </div>\n        \n    )\n}\n\nexport default withRouter(Dashboard)\n\n\n{/* <div className='bottomStatDiv'>\nCurrent date: {new Date().toISOString().slice(0, 10)}<br/>\nCurrent time: {new Date().toLocaleTimeString('el-GR',{hour12:false})}\n</div> */}","import React,{useEffect, useState}from 'react'\nimport'./login.css'\nimport Axios from 'axios'\nimport { useHistory,withRouter } from \"react-router-dom\";\nimport {setUser,removeUser} from '../redux/index.js'\nimport {useDispatch} from 'react-redux'\nimport logo from '../logos/croppedTrans.png'\n\n\nrequire('dotenv').config()\n\nconst Login =() => {\n\n    const [username,setUsername]=useState(\"\")\n    const [password,setPassword]=useState(\"\")\n    const dispatch=useDispatch()\n    const history=useHistory()\n\n    useEffect(()=>{\n        dispatch(removeUser())\n    },[])\n\n    const loginButton=()=>{\n        Axios.post(process.env.REACT_APP_API+'login',{\n            username:username,\n            password:password\n        }).then((Resp)=>{\n            if(Resp.data.message){\n                alert(Resp.data.message)\n            }\n            else{\n                if(Resp.data[0]){\n                    const user=Resp.data\n                    dispatch(setUser(user))\n                    const dashboardPath=\"/dashboard\"\n                    history.push(dashboardPath)\n                }\n                else{\n                    alert(\"Whoops! Something went wrong. Please try again\")\n                }\n            }\n        }).catch((e)=>{\n            alert(`Error! ${e.message}`)\n        })\n    }\n    return (\n        <div className=\"mainDiv\">\n            <div className=\"centerDiv\"> \n                <div className=\"loginBox\">\n                <img src={logo} className='topLogo'></img><br/>\n                <span className=\"loginText\">Login </span> <br/>\n                    <div className=\"inputs\">\n                        <span className=\"formText\">Username   </span>\n                        <input className=\"formBox\" type=\"text\" name=\"username\" onChange={(e)=>{setUsername(e.target.value)}}></input><br/>\n                        <span className=\"formText\">Password   </span>\n                        <input className=\"formBox\" type=\"password\" name=\"Password\" onChange={(e)=>{setPassword(e.target.value)}}></input>\n                        <br/>\n                        <button className=\"loginButton\" onClick={loginButton}><span className=\"loginButtText\">Login</span></button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default withRouter(Login)","import React from 'react'\nimport {MdOutlineSentimentDissatisfied} from 'react-icons/md'\nimport { useHistory } from \"react-router-dom\";\nimport logo from '../logos/croppedTrans.png';\n\n\nexport default function NoAccess() {\n    const history=useHistory()\n\n    const backToHome=()=>{\n        history.push(\"/\")\n    }\n    return (\n        <div style={{height:'100%'}}>\n            <img src={logo} className='topLogoNoAccess'></img><br/>\n            <MdOutlineSentimentDissatisfied style={{width:'100px',height:'150px'}}></MdOutlineSentimentDissatisfied>\n            <p style={{fontSize:'22px'}}>You have no access to this page</p>\n            <button onClick={backToHome} className='backToHomeErrorPage'>Back to home</button>\n        </div>\n    )\n}\n","import React from 'react'\nimport {Route,Redirect} from 'react-router-dom'\nimport { useHistory } from \"react-router-dom\";\nimport NoAccess from '../screens/noAccess';\n\nexport default function ProtectedRoute({isLogged:isLogged,component:Component,isRestricted:isRestricted,acceptedRoles:acceptedRoles, ...rest}) {\n    const history=useHistory()\n    let USER;\n    if(isLogged){\n        USER=isLogged[0]\n    }\n\n    return (\n        <Route {...rest} render={(props)=>{\n            if(isRestricted===false){\n                if(isLogged){\n                    return<Component/>\n                }\n                else{\n                    return<NoAccess/>\n                }}\n\n            else if(isRestricted===true){\n                if(isLogged){\n                    if(acceptedRoles.includes(USER.role)){\n                        return <Component/>\n                    }\n                    else{\n                        return<NoAccess/>\n                    }    \n                }\n                else{\n                    return<NoAccess/>\n                }\n            }\n        }}/>\n    )\n}\n","import Axios from 'axios'\nimport React, {useState,useEffect} from 'react'\nimport './manageUsers.css'\nimport {useSelector} from 'react-redux'\nimport { useHistory } from 'react-router'\nimport {useDispatch} from 'react-redux'\nimport {removeUser} from '../redux/index'\nimport  Select  from \"react-select\";\nimport { BsTrash } from \"react-icons/bs\";\nimport { AiFillCaretLeft } from \"react-icons/ai\";\nimport logo from '../logos/croppedTrans.png';\n\nrequire('dotenv').config()\n\nexport default function ManageUsers() {\n    const [allUsers,setAllUsers]=useState([])\n    const [allSupervisors,setAllSupervisors]=useState()\n    const [selectedUser,setSelectedUser]=useState()\n    const [firstname,setFirstName]=useState(\"\")\n    const [username,setUsername]=useState(\"\")\n    const [password,setPassword]=useState(\"\")\n    const [roles,setAllRoles]=useState()\n    const [selectedRole,setSelectedRole]=useState(\"\")\n    const [rolePassword,setRolePassword]=useState()\n    const [supervisorPass,setSupervisorPass]=useState(\"\")\n    const [dropdownIsLoading,setDropdownIsLoading]=useState(true)\n    const USER=useSelector(state => state.user[0])\n\n    const history=useHistory()\n    const dispatch=useDispatch()\n\n\n    useEffect(()=>{\n        getSidenavUsers()\n    },[])\n\n    const getSidenavUsers=()=>{\n        if(USER){\n            Axios.get(process.env.REACT_APP_API+\"getAllUsers\").then((res)=>{\n                if(res.data.checkMessage){\n                    alert(res.data.checkMessage)\n                }\n                else{\n                    setAllUsers(res.data[0])\n                    const roleArray=res.data[1].map((role)=>{\n                        return {value:role.role,label:role.role}\n                    })\n                    const passArray=res.data[1].map((role)=>{\n                        return role.password\n                    })\n                    setAllRoles(roleArray)\n                    setRolePassword(passArray)\n                    setDropdownIsLoading(false)\n                }\n            }).catch((e)=>{\n                alert(e.message)\n            })\n            Axios.post(process.env.REACT_APP_API+\"getAllSupervisors\",{\n                username:USER.username\n            }).then((res)=>{\n                if(res.data.checkMessage){\n                    alert(res.data.checkMessage)\n                }\n                else{\n                    setAllSupervisors(res.data.result)}\n            }).catch((err)=>{\n                alert(JSON.stringify(err.message))\n            })\n        }\n    }\n\n    const showUser=(User)=>{\n        setSelectedUser(User.username)\n        setFirstName(User.firstname)\n        setUsername(User.username)\n        setPassword(User.password)\n        setSelectedRole({value:User.role,label:User.role})\n    }\n\n    const handleChangeRole=(e)=>{\n        setSelectedRole(e)\n    }\n\n    const doneButton=()=>{\n        Axios.post(process.env.REACT_APP_API+\"updateUser\",{\n            selectedUser:selectedUser,\n            firstname:firstname,\n            username:username,\n            password:password,\n            role:selectedRole.value,\n            supervisorPass:supervisorPass,\n        }).then((res)=>{\n            alert(res.data.checkMessage)\n            setFirstName(\"\")\n            setUsername(\"\")\n            setPassword(\"\")\n            setSelectedUser(\"\")\n            setSupervisorPass(\"\")\n            getSidenavUsers()\n        }).catch((err)=>{\n            alert(JSON.stringify(err.message))\n        })\n    }\n\n    const backToDash=()=>{\n        history.push('/dashboard')\n    }\n\n    return (\n        <div className=\"manageUserPage\">\n            <div className=\"sidenavUsers\">\n\n                <p>USERS</p>\n                {\n                    allUsers&&\n                    allUsers.map((user,index)=>(\n                        <span onClick={()=>{showUser(user)}} key={index}>{user.firstname}</span>\n                    ))\n                }\n                {USER.role===\"supervisor\" && <p>Supervisors</p>}\n                \n                {\n                    allSupervisors &&\n                        USER.role===\"supervisor\"&&\n                            allSupervisors.map((user,index)=>(\n                                <span onClick={()=>{showUser(user)}} key={index}>{user.firstname}</span>\n                            ))\n                }\n            </div>\n\n            <div className=\"beforeMain\">\n                <div className=\"main\">\n                <img src={logo} className='topLogoManage'></img><br/>\n\n                    <p>Manage Users</p>\n\n                    <form>\n                        <span className=\"manageUserFormText\">Firstname</span>\n                        <input className=\"formBox\"value={firstname} onChange={(e)=>{setFirstName(e.target.value)}}/><br/>\n                        <span className=\"managesSerFormText\">Username</span>\n                        <input className=\"formBox\"value={username} onChange={(e)=>{setUsername(e.target.value)}}/><br/>\n                        <span className=\"manageUserFormText\">Password</span>\n                        <input className=\"formBox\"value={password} onChange={(e)=>{setPassword(e.target.value)}}/><br/>\n                    </form>\n                    <span className=\"formTextManage\">Role</span><br/>\n                        <div className='roleSelectionPosition'>\n                            <div className='roleSelectionClass'>\n                                <Select options={roles} onChange={handleChangeRole} value={selectedRole} isLoading={dropdownIsLoading} placeholder=\"Select Role!\"/>\n                            </div>\n                        </div>\n\n\n                            \n                            {selectedRole.value===\"supervisor\" && (\n                                <input className=\"formBox\" value={supervisorPass}type=\"text\" placeholder=\"Supervisor Password:\" onChange={(e)=>{setSupervisorPass(e.target.value)}}/>\n                            )}\n                    <br/>\n                    <div className=\"manageUserDoneButton\">\n                    <button className='loginButton' onClick={()=>{doneButton()}}><span className='loginButtText'>SUBMIT</span></button><br/>\n                    <span className='trashInnerDiv'>\n                        <AiFillCaretLeft onClick={backToDash} className=\"backInManage\"></AiFillCaretLeft>\n                    </span>      \n                    \n\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React,{useEffect, useState} from 'react'\nimport './reports.css'\nimport Axios from 'axios'\nimport  Select  from \"react-select\";\nimport DatePicker from 'react-datepicker';\nimport { useHistory } from 'react-router'\nimport { AiFillCaretLeft } from \"react-icons/ai\";\nimport {saveAs} from 'file-saver'\nimport logo from '../logos/croppedTrans.png';\n\nexport default function Reports() {\n\n    const [startDate,setStartDate]=useState(null)\n    const [endDate,setEndDate]=useState(null)\n    const [options,setOptions]=useState()\n    const [userSelection,setUserSelection]=useState()\n    const [SelectionOptionsLoading,setSelectionOptionsLoading]=useState(true)\n    const [reportOptions,setReportOptions]=useState()\n    const [reportSelection,setReportSelection]=useState()\n    const [reportData,setReportData]=useState(null)\n    const history=useHistory()\n\n    useEffect(() => {\n        Axios.get(`${process.env.REACT_APP_API}getAllUsersForReports`).then((res)=>{\n            const data=res.data\n            if(data){\n                const theOptions=data.map((val)=>{\n                    return {value:val.username,label:val.firstname,role:val.role}\n                })\n                setOptions(theOptions)}\n            if(res.data.checkMessage){\n                alert(res.data.checkMessage)\n            }\n            }).catch((e)=>{\n            alert(JSON.stringify(e.message))\n        })\n        setReportOptions([\n            {value:\"Detailed\",label:\"Detailed\"},\n            {value:\"Summary\",label:\"Summary\"}\n        ])\n    }, [])\n\n    useEffect(() => {\n        if(options){\n            setSelectionOptionsLoading(false)\n        }\n        else{\n            setSelectionOptionsLoading(true)\n        }\n    }, [options])\n\n    const getReport=()=>{\n        let selectedUsers\n        if(userSelection){\n            selectedUsers=userSelection.map((val)=>{\n            return val.value\n            })\n        }\n        if(startDate===null||endDate===null){\n            alert(\"Please Select Dates!\")\n        }\n        else{\n            const formattedStart=startDate.toISOString().slice(0, 10)\n            const formattedEnd=endDate.toISOString().slice(0, 10)\n            Axios.post(`${process.env.REACT_APP_API}giveReportParams`,{\n                reportType:reportSelection,\n                selectedUsers:selectedUsers,\n                startDate:formattedStart,\n                endDate:formattedEnd,\n            }).then((res)=>{\n                if(res.data.checkMessage){\n                    alert(res.data.checkMessage)\n                    if(res.data.checkMessage===\"Pdf Created\"){\n                        Axios.get(`${process.env.REACT_APP_API}pdf`,{\n                            responseType:'blob'\n                        }).then((response)=>{\n                            console.log(response.data)\n                            const pdfBlob=new Blob([response.data],{type:'application/pdf;charset=utf-8'})\n                            console.log(pdfBlob)\n                            saveAs(pdfBlob,`${reportSelection.value}Report_StartDate:${formattedStart}.pdf`)\n                        }).catch((e)=>{\n                            alert(JSON.stringify(e.message))\n                        })\n\n                    }\n                }\n               \n\n            }).catch((e)=>{\n                alert(JSON.stringify(e.message))\n        })}\n\n    }\n\n    const handleUserMenuChange=(e)=>{\n        setUserSelection(e)\n    }\n\n    const selectAllButton=()=>{\n        setUserSelection(options)\n    }\n\n    const selectAllEmployees=()=>{\n        let employees=[];\n        if(options){\n            options.map((val)=>{\n                if(val.role===\"employee\"){\n                    employees.push({value:val.value,label:val.label,role:val.role})\n                }\n            })\n            setUserSelection(employees)\n        }\n    }   \n\n    const handleReportSelectionChange=(e)=>{\n        setReportSelection(e)\n    }\n\n    const backToDash=()=>{\n        history.push('/dashboard')\n    }\n\n    return (\n        <div className='mainDiv'>\n            <div className='centerDiv'>\n                <div className='reportBox'>\n                    <div className='regulationForReport'>\n                    <img src={logo} className='topLogoRep'></img><br/>\n                        <div className='loginText'>\n                            REPORTS\n                        </div>\n                        <div>\n\n\n                        <div className='roleSelectionPosition'>\n                                <div className='roleSelectionClass'>\n                                    <Select options={options} onChange={handleUserMenuChange} isMulti isSearchable isLoading={SelectionOptionsLoading} value={userSelection} formatGroupLabel=\"Users\"/>\n                                </div>\n                            </div>\n                                <span style={{    display: \"inline-block\",\n                                    overflow: \"hidden\",\n                                    whiteSpace: \"nowrap\"}}>\n                                    <button type=\"button\" onClick={selectAllButton} className='selectButoons'>Select All</button>\n                                    <button type=\"button\" onClick={selectAllEmployees} className='selectButoons'>Select All Employees</button>\n                                </span><br/>\n                                \n                        <span className=\"formText\">Start Date</span>\n                            <DatePicker \n                                popperPlacement=\"auto\"\n                                selected={startDate}\n                                onChange={date=>{setStartDate(date)}} \n                                dateFormat='yyyy/MM/dd'\n                                maxDate={new Date()}\n                                showYearDropdown\n                                scrollableYearMonthDropdown\n                                className='formBox'\n                                />\n                            <br/>\n                            <span className=\"formText\">End Date</span>\n                            <DatePicker \n                                popperPlacement=\"auto\"\n                                selected={endDate}\n                                onChange={date=>{setEndDate(date)}} \n                                dateFormat='yyyy/MM/dd'\n                                maxDate={new Date()}\n                                showYearDropdown\n                                scrollableYearMonthDropdown\n                                className='formBox'\n                                />\n\n\n                            <div className='roleSelectionPosition'>\n                                <div className='roleSelectionClass'>\n                                    <Select onChange={handleReportSelectionChange} isSearchable value={reportSelection} options={reportOptions}/>\n                                </div>\n                            </div>\n                            <button onClick={getReport} className=\"loginButton\"><span className=\"loginButtText\">Get Report!</span></button>\n                        </div>\n                    </div>\n                    <AiFillCaretLeft onClick={backToDash} className=\"backButton\"></AiFillCaretLeft>\n                </div>\n            </div>\n        </div>\n    )\n}","import React from 'react'\nimport {MdOutlineSentimentVeryDissatisfied} from 'react-icons/md'\nimport { useHistory } from \"react-router-dom\";\nimport logo from '../logos/croppedTrans.png';\n\n\n\nexport default function Error404() {\n    const history=useHistory()\n\n    const backToHome=()=>{\n        history.push(\"/\")\n    }\n    return (\n        <div>\n            <br/>\n            <img src={logo} className='topLogoError'></img><br/>\n            <MdOutlineSentimentVeryDissatisfied style={{width:'200px', height:'100px'}}></MdOutlineSentimentVeryDissatisfied><br></br>\n            <p style={{fontSize:'30px'}}>Error 404! Wrong Route!</p>\n            <button onClick={backToHome} className='backToHomeErrorPage'>Back to home</button>\n        </div>\n    )\n}\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport CreateUser from '../screens/createUser';\nimport Dashboard from '../screens/dashboard';\nimport Login from '../screens/login';\nimport ProtectedRoute from './protectedRoute';\nimport {useSelector} from 'react-redux'\nimport ManageUsers from '../screens/manageUsers';\nimport Reports from '../screens/reports';\nimport Error404 from '../screens/err404';\n\n\nfunction Routes(){\n    const USER=useSelector(state => state.user)\n    return(\n        <Router>\n            <Switch>\n                <Route path=\"/\" component={Login} exact/>        \n                <ProtectedRoute path=\"/createUser\" component={CreateUser} isLogged={USER} isRestricted={true} acceptedRoles={['manager','supervisor']}/>\n                <ProtectedRoute path=\"/dashboard\" component={Dashboard} isLogged={USER} isRestricted={false} acceptedRoles={['employee','manager','supervisor']}/>\n                <ProtectedRoute path=\"/manageUsers\" component={ManageUsers} isLogged={USER} isRestricted={true} acceptedRoles={['manager','supervisor']}/>\n                <ProtectedRoute path=\"/reports\" component={Reports} isLogged={USER} isRestricted={true} acceptedRoles={['manager','supervisor']}/>\n                <Route path='*' component={Error404}/>\n            </Switch>\n        </Router>\n)\n}\n\nexport default Routes","import './App.css';\nimport Routes from './routes/routes'\nimport {Provider} from 'react-redux'\nimport store from './redux/index'\nimport 'react-datepicker/dist/react-datepicker';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n        <Routes/>\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {\n  BrowserRouter as Router,} from 'react-router-dom'\nimport 'react-datepicker/dist/react-datepicker.css'\n\nReactDOM.render(\n  <Router>\n    <App />\n    </Router>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}